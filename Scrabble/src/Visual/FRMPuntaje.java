/** Scrabble Games
 * Autores: Juan David Tique Triana         - 20181020046
 *          Johnatan GuillermoRuiz Bautista - 20181020034
 *          Jose Luis Quintero Ca�izalez    - 20181020061
 * */
package Visual;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JButton;
import Logica.Jugador;
import java.util.ArrayList;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;

/**
 * Ventana de puntajes de partidas anteriores
 *
 * @author <a href="https://github.com/Cuanse">Cuanse</a>
 * @author  <a href="https://github.com/jgruizba">Johnatan</a>
 * @author <a href="https://github.com/JQuinteroC">JQuinteroC</a>
 * @version 1.0
 * @see Visual.FRMenu
 * @see Logica.Jugador
 */
public class FRMPuntaje extends javax.swing.JFrame {

    private DataInputStream archivoCargado;
    private DataOutputStream archivoGuardado;
    // private Jugador[] Mejores;
    private ArrayList<Jugador> Mejores;
    // Calendar calendario = Calendar.getInstance();
    java.util.Date calendario = new Date();
    // private String[] Fecha;
    private ArrayList<String> Fecha;

    /**
     * Creates new form FRMPuntaje
     *
     * @see #cargar()
     * @see #ordenar()
     */
    public FRMPuntaje() {

        // guardar("Extra",2000); // Estoy añadiendo un jugador que rompia el record anterior
        // Borrar mas adelante (Solo para pruebas)
        cargar();
        ordenar();

        initComponents();
        super.setLocationRelativeTo(null);
        this.getContentPane().setBackground(new java.awt.Color(255, 255, 255));
    }

    public int cargar() {
        try {
            archivoCargado = new DataInputStream(new FileInputStream(
                    System.getProperty("user.dir")
                    + "\\src\\recursos\\usuarios.txt"));
            //Mejores = new Jugador[10];
            Mejores = new ArrayList<Jugador>();
            // Fecha = new String[10];
            Fecha = new ArrayList<String>();
            int i = 0;
            // for(int j = 0; j < 10 ; j++){   //lo relleno de nada para evitar lang.NullPointerException
            //Fecha[j] = " ";
            //Mejores[j] = new Jugador(" ",0);
            //  }
            for (int j = 0; j < 10; j++) {
                Fecha.add(j, " ");
                Mejores.add(j, new Jugador(" ", 0));
            }
            while (true) {

                String nombre = archivoCargado.readUTF();
                int puntaje = archivoCargado.readInt();
                //Fecha[i] = archivoCargado.readUTF();                                
                //Mejores[i++] = new Jugador(nombre,puntaje);	
                Fecha.add(archivoCargado.readUTF());
                Mejores.add(new Jugador(nombre, puntaje));
            }

        } catch (FileNotFoundException fnfe) {
            return 0;
        } catch (IOException ioe) {
            /* Error al escribir */
        } catch (ArrayIndexOutOfBoundsException Aa) {

        }
        return 1;
    }

    public void guardar(String nombre, int puntaje) {
        try {
            archivoGuardado = new DataOutputStream(new FileOutputStream(
                    System.getProperty("user.dir")
                    + "\\src\\recursos\\usuarios.txt", true));

            // Calendar calendario = Calendar.getInstance();   //fecha de hoy
            calendario = new Date();
            // grabando al archivo            
            archivoGuardado.writeUTF(nombre);
            archivoGuardado.writeInt(puntaje);
            //archivoGuardado.writeUTF(calendario.get(Calendar.YEAR)+"/"+calendario.get(Calendar.MONTH+1)+"/"+calendario.get(Calendar.DAY_OF_MONTH));
            archivoGuardado.writeUTF(String.valueOf(calendario));

            // Cierra el Archivo
            archivoGuardado.close();
        } catch (FileNotFoundException fnfe) {
            /* Archivo no encontrado */
        } catch (IOException ioe) {
            /* Error al escribir */
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAtras = new javax.swing.JButton();
        scpPuntajes = new javax.swing.JScrollPane();
        tblPuntajes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);

        btnAtras.setContentAreaFilled(false);
        btnAtras.setOpaque(true);
        btnAtras.setBackground(new java.awt.Color(39, 170, 240));
        btnAtras.setFont(new java.awt.Font("Dotum", 1, 20)); // NOI18N
        btnAtras.setForeground(new java.awt.Color(255, 255, 255));
        btnAtras.setText("Atras");
        btnAtras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(26, 138, 186), 2));
        btnAtras.setMaximumSize(new java.awt.Dimension(119, 60));
        btnAtras.setMinimumSize(new java.awt.Dimension(119, 60));
        btnAtras.setPreferredSize(new java.awt.Dimension(119, 60));
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAtrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAtrasMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAtrasMousePressed(evt);
            }
        });
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        tblPuntajes.setModel(new javax.swing.table.DefaultTableModel(
            /* new Object [][] {
                {"#1", Mejores[0].getNombre(), Mejores[0].getPuntaje(), Fecha[0]},
                {"#2", Mejores[1].getNombre(), Mejores[1].getPuntaje(), Fecha[1]},
                {"#3", Mejores[2].getNombre(), Mejores[2].getPuntaje(), Fecha[2]},
                {"#4", Mejores[3].getNombre(), Mejores[3].getPuntaje(), Fecha[3]},
                {"#5", Mejores[4].getNombre(), Mejores[4].getPuntaje(), Fecha[4]},
                {"#6", Mejores[5].getNombre(), Mejores[5].getPuntaje(), Fecha[5]},
                {"#7", Mejores[6].getNombre(), Mejores[6].getPuntaje(), Fecha[6]},
                {"#8", Mejores[7].getNombre(), Mejores[7].getPuntaje(), Fecha[7]},
                {"#9", Mejores[8].getNombre(), Mejores[8].getPuntaje(), Fecha[8]},
                {"#10", Mejores[9].getNombre(), Mejores[9].getPuntaje(), Fecha[9]},
            },
            new String [] {
                "#", "nombre", "Puntaje", "Fecha"
            }*/
            new Object [][] {
                {"#1", Mejores.get(0).getNombre(), Mejores.get(0).getPuntaje(), Fecha.get(0)},
                {"#2", Mejores.get(1).getNombre(), Mejores.get(1).getPuntaje(), Fecha.get(1)},
                {"#3", Mejores.get(2).getNombre(), Mejores.get(2).getPuntaje(), Fecha.get(2)},
                {"#4", Mejores.get(3).getNombre(), Mejores.get(3).getPuntaje(), Fecha.get(3)},
                {"#5", Mejores.get(4).getNombre(), Mejores.get(4).getPuntaje(), Fecha.get(4)},
                {"#6", Mejores.get(5).getNombre(), Mejores.get(5).getPuntaje(), Fecha.get(5)},
                {"#7", Mejores.get(6).getNombre(), Mejores.get(6).getPuntaje(), Fecha.get(6)},
                {"#8", Mejores.get(7).getNombre(), Mejores.get(7).getPuntaje(), Fecha.get(7)},
                {"#9", Mejores.get(8).getNombre(), Mejores.get(8).getPuntaje(), Fecha.get(8)},
                {"#10", Mejores.get(9).getNombre(), Mejores.get(9).getPuntaje(), Fecha.get(9)},
            },
            new String [] {
                "#", "nombre", "Puntaje", "Fecha"
            }
        ));
        tblPuntajes.setRowHeight(40);
        scpPuntajes.setViewportView(tblPuntajes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scpPuntajes, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scpPuntajes, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Funciones">
    // Define el ICO del JFrame
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("recursos/icon_Scrabble.png"));

        return retValue;
    }

    public void ordenar() {
        Jugador aux = new Jugador(); //Variable auxiliar de tipo jugador
        String fechaAux;    //auxiliar

        /* for(int i = 0;i < Mejores.length; i++){ //Método burbuja para ordenar el arrayList 
                            for(int j = 0 ; j < Mejores.length; j++ ){
                                if(Mejores[i].getPuntaje() > Mejores[j].getPuntaje() ){                                    
                                   aux = Mejores[i];                                  
                                   Mejores[i] = Mejores[j];
                                   Mejores[j] = aux;
                                   // acá ordeno las fechas con respecto a lo anterior
                                   fechaAux = Fecha[i];                                  
                                   Fecha[i] = Fecha[j];
                                   Fecha[j] = fechaAux;
                                }
                            }
                        }*/
        for (int i = 0; i < Mejores.size(); i++) {
            for (int j = 0; j < Mejores.size(); j++) {
                if (Mejores.get(i).getPuntaje() > Mejores.get(j).getPuntaje()) {
                    aux = Mejores.get(i);
                    Mejores.remove(i);
                    Mejores.add(i, Mejores.get(j));
                    Mejores.remove(j);
                    Mejores.add(j, aux);
                    fechaAux = Fecha.get(i);
                    Fecha.remove(i);
                    Fecha.add(i, Fecha.get(j));
                    Fecha.remove(j);
                    Fecha.add(j, fechaAux);
                }
            }
        }
    }

    // Eventos visuales de botones
    public void mouseEntrante(JButton boton) {
        boton.setBackground(new java.awt.Color(61, 179, 229));
    }

    public void mouseSaliente(JButton boton) {
        //boton.setBackground(new java.awt.Color(39,170,240));
        boton.setBackground(new java.awt.Color(39, 170, 240));
    }

    public void mousePulsado(JButton boton) {
        boton.setBackground(new java.awt.Color(30, 156, 209));
    }
    // </editor-fold>  

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        FRMenu menu = new FRMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAtrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseEntered
        mouseEntrante(btnAtras);
    }//GEN-LAST:event_btnAtrasMouseEntered

    private void btnAtrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseExited
        mouseSaliente(btnAtras);
    }//GEN-LAST:event_btnAtrasMouseExited

    private void btnAtrasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMousePressed
        mousePulsado(btnAtras);
    }//GEN-LAST:event_btnAtrasMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JScrollPane scpPuntajes;
    private javax.swing.JTable tblPuntajes;
    // End of variables declaration//GEN-END:variables
}
